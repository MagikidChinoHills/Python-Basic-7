# ===============================================
# Lesson Plan: Modules and Libraries in Python
# ===============================================

# **Objective:** Introduce built-in modules and external libraries for extended functionality.

# ===============================================
# 1. Introduction to Modules and Libraries
# ===============================================

# Modules are files containing Python code that can be used to add functionality to your programs.
# Libraries are collections of modules that provide a wide range of pre-written code.

# ===============================================
# 2. Using Built-in Modules
# ===============================================

# Python includes a rich set of built-in modules that provide additional functionality.

# Examples:
import math

# Using the math module to calculate square root
sqrt_result = math.sqrt(25)

# ===============================================
# 3. Installing External Libraries
# ===============================================

# External libraries can be installed using package managers like pip.

# Example:
# !pip install requests

# ===============================================
# 4. Using External Libraries
# ===============================================

# External libraries can be imported and used in your programs.

# Examples:
import requests

# Using the requests library to make an HTTP request
response = requests.get("https://www.example.com")
print("Response status code:", response.status_code)

# ===============================================
# 5. Creating Your Own Modules
# ===============================================

# You can create your own modules by defining functions, classes, or variables in a separate Python file.

# Example:
# Create a file named my_module.py with functions and variables
# import my_module

# ===============================================
# 6. Exploring Popular Libraries
# ===============================================

# Introduce students to popular external libraries for various tasks:
# - NumPy for numerical operations
# - pandas for data manipulation
# - Matplotlib for data visualization
# - Flask for web development
# - Django for web development
# - TensorFlow for machine learning

# ===============================================
# 7. Exercises and Challenges
# ===============================================

# Exercise 1: Use the math module to calculate the area of a circle given its radius.
# Exercise 2: Install the requests library and write a program to fetch and print the current weather for a city using an online weather API.
# Challenge 1: Create a function that uses the NumPy library to perform matrix multiplication.
# Challenge 2: Build a simple web application using the Flask library that displays a "Hello, World!" message.

# ===============================================
# 8. Conclusion
# ===============================================

# In this lesson, you've learned about modules and libraries in Python, including built-in modules and external libraries. Modules and libraries allow you to extend Python's functionality and simplify complex tasks.

# Continue exploring and using libraries to leverage the power of Python for various applications.

# ===============================================
# Vocabulary Words and Definitions
# ===============================================

# - Module: A Python file containing code that can be imported and used in other programs.
# - Library: A collection of modules that provide additional functionality to Python.
# - Package Manager: A tool used to install, update, and manage external libraries and packages.
# - External Library: A library created by others and not included in the Python standard library.
# - NumPy: A library for numerical operations and efficient handling of arrays and matrices.
# - pandas: A library for data manipulation and analysis.
# - Matplotlib: A library for creating static, animated, and interactive visualizations in Python.
# - Flask: A micro web framework for building web applications.
# - Django: A high-level web framework for building web applications quickly and with less code.
# - TensorFlow: An open-source machine learning library developed by Google.
